name: Sync and Combine EPG Files

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */3 * * *'  # A cada 3 horas

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Git LFS
        run: |
          git lfs install

      - name: Configure Git User Identity
        run: |
          git config --global user.email "seu-email@example.com"
          git config --global user.name "Seu Nome"

      - name: Download files
        run: |
          wget -O epg4.xml.gz http://m3u4u.com/epg/w16vy5vpp1cx6972n39p
          wget -O br.xml.gz https://i.mjh.nz/PlutoTV/br.xml.gz
          wget -O guide.xml.gz https://raw.githubusercontent.com/rootcoder/epgtv/main/guide.xml.gz
          wget -O sports.xml.gz https://helmerluzo.github.io/FreeLiveSportsTV_HL/epg/FreeLiveSportsTV.xml.gz
          wget -O band.xml https://raw.githubusercontent.com/limaalef/BrazilTVEPG/main/band.xml
          wget -O epg_ripper_SV1.xml.gz https://epgshare01.online/epgshare01/epg_ripper_SV1.xml.gz
          wget -O epg_ripper_PE1.xml.gz https://epgshare01.online/epgshare01/epg_ripper_PE1.xml.gz
          wget -O epg_ripper_BR1.xml.gz https://epgshare01.online/epgshare01/epg_ripper_BR1.xml.gz
          wget -O epg_ripper_AU1.xml.gz https://epgshare01.online/epgshare01/epg_ripper_AU1.xml.gz
          wget -O epg_ripper_PT1.xml.gz https://epgshare01.online/epgshare01/epg_ripper_PT1.xml.gz
          wget -O epg_ripper_ZA1.xml.gz https://epgshare01.online/epgshare01/epg_ripper_ZA1.xml.gz  # ✅ Nova fonte adicionada
          wget -O guide_br3.xml https://raw.githubusercontent.com/Neywerson/GuideTV/BR3/guide.xml
          wget -O maissbt.xml https://raw.githubusercontent.com/limaalef/BrazilTVEPG/main/maissbt.xml
          wget -O skysportnow.xml https://i.mjh.nz/SkySportNow/epg.xml
          wget -O epgfixed.xml https://raw.githubusercontent.com/listamake/epgweb.github.io/main/epgfixed.xml

      - name: Extract files
        run: |
          gzip -d epg4.xml.gz || true
          gzip -d br.xml.gz || true
          gzip -d guide.xml.gz || true
          gzip -d sports.xml.gz || true
          gzip -d epg_ripper_SV1.xml.gz || true
          gzip -d epg_ripper_PE1.xml.gz || true
          gzip -d epg_ripper_BR1.xml.gz || true
          gzip -d epg_ripper_AU1.xml.gz || true
          gzip -d epg_ripper_PT1.xml.gz || true
          gzip -d epg_ripper_ZA1.xml.gz || true  # ✅ Extração da nova fonte
          # epgfixed.xml, guide_br3.xml, maissbt.xml, skysportnow.xml e band.xml já estão em XML

      - name: Combine XML files and generate only compressed file
        run: |
          python <<'EOF'
          import xml.etree.ElementTree as ET
          import gzip
          import io

          def carregar_xml(caminho):
              try:
                  tree = ET.parse(caminho)
                  return tree.getroot()
              except ET.ParseError as e:
                  print(f"Erro ao analisar o arquivo {caminho}: {e}")
                  return None

          def identar_elemento(elemento, nivel=0):
              espaco = "  "
              if len(elemento):
                  if not elemento.text or not elemento.text.strip():
                      elemento.text = f"\n{espaco * (nivel + 1)}"
                  for filho in elemento:
                      identar_elemento(filho, nivel + 1)
                  if not elemento.tail or not elemento.tail.strip():
                      elemento.tail = f"\n{espaco * nivel}"
              else:
                  if not elemento.tail or not elemento.tail.strip():
                      elemento.tail = f"\n{espaco * nivel}"

          fontes = {
              "epg4.xml": carregar_xml('epg4.xml'),
              "br.xml": carregar_xml('br.xml'),
              "guide.xml": carregar_xml('guide.xml'),
              "sports.xml": carregar_xml('sports.xml'),
              "band.xml": carregar_xml('band.xml'),
              "epg_ripper_SV1.xml": carregar_xml('epg_ripper_SV1.xml'),
              "epg_ripper_PE1.xml": carregar_xml('epg_ripper_PE1.xml'),
              "epg_ripper_BR1.xml": carregar_xml('epg_ripper_BR1.xml'),
              "epg_ripper_AU1.xml": carregar_xml('epg_ripper_AU1.xml'),
              "epg_ripper_PT1.xml": carregar_xml('epg_ripper_PT1.xml'),
              "epg_ripper_ZA1.xml": carregar_xml('epg_ripper_ZA1.xml'),  # ✅ Nova fonte incluída
              "guide_br3.xml": carregar_xml('guide_br3.xml'),
              "maissbt.xml": carregar_xml('maissbt.xml'),
              "skysportnow.xml": carregar_xml('skysportnow.xml'),
              "epgfixed.xml": carregar_xml('epgfixed.xml')
          }

          root_combined = ET.Element('tv', {
              "generator-info-name": "EPG Combiner",
              "generator-info-url": "https://example.com/"
          })
          ids_existentes = set()

          for nome_fonte, root in fontes.items():
              if root is not None:
                  for channel in root.findall('./channel'):
                      channel_id = channel.attrib.get('id')
                      if channel_id not in ids_existentes:
                          root_combined.append(channel)
                          ids_existentes.add(channel_id)

          for nome_fonte, root in fontes.items():
              if root is not None:
                  for programme in root.findall('./programme'):
                      if programme.attrib.get('channel') in ids_existentes:
                          root_combined.append(programme)

          identar_elemento(root_combined)

          tree_combined = ET.ElementTree(root_combined)
          buf = io.BytesIO()
          tree_combined.write(buf, encoding='utf-8', xml_declaration=True)
          compressed_data = gzip.compress(buf.getvalue())

          with open('epg_combinado.xml.gz', 'wb') as f_out:
              f_out.write(compressed_data)

          print("EPG combinado gerado com sucesso!")
          EOF

      - name: Backup generated file
        run: |
          mkdir -p backup
          cp epg_combinado.xml.gz backup/

      - name: Update repository with new .xml.gz file using Git LFS
        run: |
          git rm -f epg_combinado.xml.gz || true
          cp backup/epg_combinado.xml.gz .
          ls -lh epg_combinado.xml.gz
          git add epg_combinado.xml.gz
          git commit -m "Automated combination at $(date -u)"
          git push

      - name: Clean up local old LFS files
        run: |
          git lfs prune
          echo "Arquivos LFS antigos foram removidos localmente."
